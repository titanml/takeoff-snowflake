// Description: This script sets up the OAuth integration, designed for dataiku users 
USE ROLE ACCOUNTADMIN;

CREATE OR REPLACE NETWORK RULE SNOWFLAKE_EGRESS_ACCESS
  MODE = EGRESS
  TYPE = HOST_PORT
  VALUE_LIST = ('0.0.0.0:443','0.0.0.0:80');

CREATE EXTERNAL ACCESS INTEGRATION SNOWFLAKE_EGRESS_ACCESS_INTEGRATION
  ALLOWED_NETWORK_RULES = (SNOWFLAKE_EGRESS_ACCESS)
  ENABLED = true;


// Setup OAuth Integration
CREATE OR REPLACE SECURITY INTEGRATION OAUTH_DATAIKU_SPCS
  TYPE = OAUTH
  ENABLED = TRUE
  OAUTH_CLIENT = CUSTOM
  OAUTH_CLIENT_TYPE = 'CONFIDENTIAL'
  OAUTH_REDIRECT_URI = 'http://localhost:11000/dip/api/oauth2-callback'
  OAUTH_ALLOW_NON_TLS_REDIRECT_URI = TRUE
  OAUTH_ISSUE_REFRESH_TOKENS = TRUE
  OAUTH_REFRESH_TOKEN_VALIDITY = 7776000
  BLOCKED_ROLES_LIST = ('SYSADMIN');


// IMPORTANT: get the OAUTH_CLIENT_ID and OAUTH_CLIENT_SECRET, and provide it to Dataiku
CALL SYSTEM$SHOW_OAUTH_CLIENT_SECRETS('OAUTH_DATAIKU_SPCS');

// Grant the role to the user. In the demo, we will use the user YICHENGWANG
GRANT ROLE CONTAINER_USER_ROLE TO USER "YICHENGWANG";

GRANT USAGE ON INTEGRATION SNOWFLAKE_EGRESS_ACCESS_INTEGRATION TO ROLE CONTAINER_USER_ROLE;



// Setup Compute Pool
USE ROLE CONTAINER_USER_ROLE;
CREATE COMPUTE POOL IF NOT EXISTS CONTAINER_HOL_POOL
MIN_NODES = 1
MAX_NODES = 1
INSTANCE_FAMILY = GPU_NV_S; -- GPU_NV_S is the GPU instance family (A10 x 1)

CREATE IMAGE REPOSITORY CONTAINER_HOL_DB.PUBLIC.IMAGE_REPO;

SHOW IMAGE REPOSITORIES IN SCHEMA CONTAINER_HOL_DB.PUBLIC;


